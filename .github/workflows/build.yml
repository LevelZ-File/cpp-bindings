name: Build Project

on:
  push:
    branches: [ master, ver/* ]
  pull_request:
    branches: [ master, ver/* ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Set Reusable Strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Configure CMake
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -S ${{ github.workspace }}

      - name: Build Project
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} .

      - name: Test Project
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: ctest
  
  deploy:
    runs-on: ubuntu-latest
    needs: build
    name: Deploy Doxygen
    if: ${{ github.event_name != 'pull_request' && github.ref_name == 'master' }}
    steps:
      - uses: actions/checkout@v4
      - name: Set Reusable Strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
    
      - name: Configure CMake
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_CXX_COMPILER=clang++
          -DCMAKE_C_COMPILER=clang
          -S ${{ github.workspace }}
      
      - name: Build Project
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} .
      
      - name: Deploy Doxygen
        run: bash doxygen.sh ${GITHUB_SHA::7}